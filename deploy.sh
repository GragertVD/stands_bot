#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è VK Teams Bot + N8N –Ω–∞ VPS
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh yourdomain.com

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_color() {
    printf "${1}${2}${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥
check_command() {
    if ! command -v $1 &> /dev/null; then
        print_color $RED "‚ùå $1 –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    return 0
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -eq 0 ]; then
    print_color $RED "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh yourdomain.com"
    print_color $YELLOW "–ü—Ä–∏–º–µ—Ä: ./deploy.sh mybot.example.com"
    exit 1
fi

DOMAIN=$1

print_color $BLUE "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ VK Teams Bot System –Ω–∞ –¥–æ–º–µ–Ω–µ: $DOMAIN"
print_color $BLUE "=================================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã root –∏–ª–∏ sudo
if [ "$EUID" -ne 0 ]; then
    print_color $RED "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root –∏–ª–∏ —á–µ—Ä–µ–∑ sudo"
    exit 1
fi

# 1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
print_color $YELLOW "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
if check_command apt; then
    apt update && apt upgrade -y
    apt install -y curl wget git nano htop ufw
elif check_command dnf; then
    dnf update -y  
    dnf install -y curl wget git nano htop firewalld
else
    print_color $RED "‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è —Å–∏—Å—Ç–µ–º–∞. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è Ubuntu/Debian/CentOS/RHEL"
    exit 1
fi

# 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
print_color $YELLOW "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
if ! check_command docker; then
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    rm get-docker.sh
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
print_color $YELLOW "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
if ! check_command docker-compose; then
    curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
print_color $GREEN "‚úÖ Docker: $(docker --version)"
print_color $GREEN "‚úÖ Docker Compose: $(docker-compose --version)"

# 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
print_color $YELLOW "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞..."
if check_command ufw; then
    ufw --force enable
    ufw allow 22/tcp   # SSH
    ufw allow 80/tcp   # HTTP
    ufw allow 443/tcp  # HTTPS
    print_color $GREEN "‚úÖ UFW –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
elif check_command firewall-cmd; then
    systemctl enable firewalld
    systemctl start firewalld
    firewall-cmd --permanent --add-port=22/tcp
    firewall-cmd --permanent --add-port=80/tcp
    firewall-cmd --permanent --add-port=443/tcp
    firewall-cmd --reload
    print_color $GREEN "‚úÖ Firewalld –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
fi

# 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Certbot –¥–ª—è SSL
print_color $YELLOW "üîí –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Certbot..."
if check_command apt; then
    apt install -y certbot
elif check_command dnf; then
    dnf install -y certbot
fi

# 5. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
WORK_DIR="/opt/vk-teams-bot-system"
print_color $YELLOW "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $WORK_DIR"

if [ -d "$WORK_DIR" ]; then
    print_color $YELLOW "‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û–±–Ω–æ–≤–ª—è–µ–º..."
    cd $WORK_DIR
    git pull || print_color $YELLOW "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å (–≤–æ–∑–º–æ–∂–Ω–æ, –µ—Å—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è)"
else
    print_color $BLUE "üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç..."
    # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    echo "‚ö†Ô∏è –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –≤ —Å–∫—Ä–∏–ø—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π!"
    echo "git clone <YOUR_REPOSITORY_URL> $WORK_DIR"
    # git clone https://github.com/username/vk-teams-bot-system $WORK_DIR
    mkdir -p $WORK_DIR
    cd $WORK_DIR
fi

# 6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
print_color $YELLOW "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª —Å –∑–∞–¥–∞–Ω–Ω—ã–º –¥–æ–º–µ–Ω–æ–º
cat > .env << EOF
# VK Teams Bot Configuration
VK_TEAMS_BOT_TOKEN=YOUR_BOT_TOKEN_HERE
VK_TEAMS_API_URL=https://api.internal.myteam.mail.ru/bot/v1

# N8N –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
N8N_WEBHOOK_URL=https://${DOMAIN}/webhook/vk-teams

# Server settings
SERVER_HOST=0.0.0.0
SERVER_PORT=8000
POLL_TIME=30

# Redis (—Å –ø–∞—Ä–æ–ª–µ–º –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
REDIS_URL=redis://redis:6379
REDIS_PASSWORD=SecureRedisPassword$(date +%Y)!

# N8N –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
N8N_BASIC_AUTH_ACTIVE=true
N8N_BASIC_AUTH_USER=admin
N8N_BASIC_AUTH_PASSWORD=SecureN8NPassword$(date +%Y)!
N8N_HOST=${DOMAIN}
N8N_PORT=443
N8N_PROTOCOL=https
N8N_PATH=/n8n/
WEBHOOK_URL=https://${DOMAIN}/
N8N_SECURE_COOKIE=true
N8N_COOKIE_SAME_SITE_POLICY=strict

# –î–æ–º–µ–Ω –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
DOMAIN=${DOMAIN}
ALLOWED_HOSTS=${DOMAIN},www.${DOMAIN}

# Environment
ENVIRONMENT=production
DEBUG=false
TIMEZONE=Europe/Moscow
EOF

print_color $GREEN "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"
print_color $RED "‚ö†Ô∏è –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –∏ —É–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω VK Teams –±–æ—Ç–∞:"
print_color $YELLOW "nano .env"

# 7. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
print_color $YELLOW "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p n8n/data nginx/ssl

# 8. SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
print_color $YELLOW "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–ª—è –¥–æ–º–µ–Ω–∞ $DOMAIN..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ
if [ -f "nginx/ssl/fullchain.pem" ] && [ -f "nginx/ssl/privkey.pem" ]; then
    print_color $GREEN "‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –≥–æ—Ç–æ–≤—ã–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    if openssl x509 -in nginx/ssl/fullchain.pem -noout -checkend 0 >/dev/null 2>&1; then
        print_color $GREEN "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã"
    else
        print_color $RED "‚ùå SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∏—Å—Ç–µ–∫–ª–∏ –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞
    chmod 644 nginx/ssl/fullchain.pem
    chmod 600 nginx/ssl/privkey.pem
    
else
    print_color $YELLOW "üìã SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ª—É—á–∞–µ–º —á–µ—Ä–µ–∑ Let's Encrypt..."
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –µ—Å–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç
    systemctl stop nginx 2>/dev/null || true
    systemctl stop apache2 2>/dev/null || true

    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —á–µ—Ä–µ–∑ Let's Encrypt
    if certbot certonly --standalone --agree-tos --register-unsafely-without-email -d $DOMAIN -d www.$DOMAIN; then
        # –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
        cp /etc/letsencrypt/live/$DOMAIN/fullchain.pem nginx/ssl/
        cp /etc/letsencrypt/live/$DOMAIN/privkey.pem nginx/ssl/
        chmod 644 nginx/ssl/fullchain.pem
        chmod 600 nginx/ssl/privkey.pem
        print_color $GREEN "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã —á–µ—Ä–µ–∑ Let's Encrypt"
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        echo "0 12 * * * /usr/bin/certbot renew --quiet --deploy-hook 'cd $WORK_DIR && docker-compose -f docker-compose.production.yml restart nginx'" | crontab -
        print_color $GREEN "‚úÖ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SSL –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
    else
        print_color $RED "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
        print_color $YELLOW "üí° –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã:"
        print_color $YELLOW "1. –†–∞–∑–º–µ—Å—Ç–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ nginx/ssl/fullchain.pem –∏ nginx/ssl/privkey.pem"
        print_color $YELLOW "2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –¥–æ–º–µ–Ω $DOMAIN —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"
        print_color $YELLOW "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø–æ—Ä—Ç—ã 80 –∏ 443 –æ—Ç–∫—Ä—ã—Ç—ã –≤ —Ñ–∞–π—Ä–≤–æ–ª–µ"
        print_color $YELLOW "4. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ –ø–æ—Ä—Ç–∞—Ö 80/443"
        print_color $YELLOW ""
        print_color $YELLOW "üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: EXISTING_SSL_DEPLOYMENT.md"
        exit 1
    fi
fi

# 9. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–¥ –¥–æ–º–µ–Ω
print_color $YELLOW "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx –¥–ª—è –¥–æ–º–µ–Ω–∞ $DOMAIN..."

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx
if [ -f "nginx/conf.d/production.conf" ]; then
    sed -i "s/gragert\.ru/$DOMAIN/g" nginx/conf.d/production.conf
    print_color $GREEN "‚úÖ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
fi

# 10. –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
print_color $YELLOW "üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞..."

cat > /etc/systemd/system/vk-teams-bot.service << EOF
[Unit]
Description=VK Teams Bot System
After=docker.service
Requires=docker.service

[Service]
Type=oneshot
RemainAfterExit=true
WorkingDirectory=$WORK_DIR
ExecStart=/usr/local/bin/docker-compose -f docker-compose.production.yml up -d
ExecStop=/usr/local/bin/docker-compose -f docker-compose.production.yml down
TimeoutStartSec=300

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable vk-teams-bot.service
print_color $GREEN "‚úÖ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# 11. –°–æ–∑–¥–∞–Ω–∏–µ Makefile –∫–æ–º–∞–Ω–¥
print_color $YELLOW "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —É–¥–æ–±–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."

cat > /usr/local/bin/botctl << 'EOF'
#!/bin/bash
cd /opt/vk-teams-bot-system

case "$1" in
    start)
        systemctl start vk-teams-bot
        ;;
    stop)
        systemctl stop vk-teams-bot
        ;;
    restart)
        systemctl restart vk-teams-bot
        ;;
    status)
        systemctl status vk-teams-bot
        docker-compose -f docker-compose.production.yml ps
        ;;
    logs)
        docker-compose -f docker-compose.production.yml logs -f
        ;;
    update)
        systemctl stop vk-teams-bot
        git pull
        docker-compose -f docker-compose.production.yml build --no-cache
        systemctl start vk-teams-bot
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: botctl {start|stop|restart|status|logs|update}"
        ;;
esac
EOF

chmod +x /usr/local/bin/botctl
print_color $GREEN "‚úÖ –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: botctl)"

# 12. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
print_color $GREEN "\nüéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
print_color $BLUE "\nüìã –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:"
print_color $YELLOW "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –∏ —É–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞:"
print_color $NC "   nano .env"
print_color $YELLOW "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É:"
print_color $NC "   botctl start"
print_color $YELLOW "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å:"
print_color $NC "   botctl status"

print_color $BLUE "\nüåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ:"
print_color $NC "   ‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç: https://$DOMAIN/"
print_color $NC "   ‚Ä¢ N8N –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: https://$DOMAIN/n8n/"
print_color $NC "   ‚Ä¢ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://$DOMAIN/docs"
print_color $NC "   ‚Ä¢ Health check: https://$DOMAIN/health"

print_color $BLUE "\nüîê –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:"
print_color $NC "   ‚Ä¢ N8N –ª–æ–≥–∏–Ω: admin"
print_color $NC "   ‚Ä¢ N8N –ø–∞—Ä–æ–ª—å: $(grep N8N_BASIC_AUTH_PASSWORD .env | cut -d'=' -f2)"

print_color $BLUE "\nüõ†Ô∏è –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
print_color $NC "   ‚Ä¢ botctl start    - –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã"
print_color $NC "   ‚Ä¢ botctl stop     - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã"  
print_color $NC "   ‚Ä¢ botctl restart  - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã"
print_color $NC "   ‚Ä¢ botctl status   - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
print_color $NC "   ‚Ä¢ botctl logs     - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
print_color $NC "   ‚Ä¢ botctl update   - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"

print_color $GREEN "\n‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É!"
